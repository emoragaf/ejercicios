<?php

/**
 * This is the model base class for the table "categorias".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Categorias".
 *
 * Columns in table "categorias" available as properties of the model,
 * followed by relations of table "categorias" available as properties of the model.
 *
 * @property integer $id
 * @property integer $app_id
 * @property integer $padre
 * @property string $nombre
 * @property string $descripcion
 *
 * @property Articulos[] $articuloses
 * @property Categorias $padre0
 * @property Categorias[] $categoriases
 * @property Apps $app
 */
abstract class BaseCategorias extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'categorias';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Categoria|Categorias', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('app_id, nombre', 'required'),
			array('app_id, padre', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>100),
			array('descripcion', 'safe'),
			array('padre, descripcion', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, app_id, padre, nombre, descripcion', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'articulos' => array(self::HAS_MANY, 'Articulos', 'categoria_id'),
			'father' => array(self::BELONGS_TO, 'Categorias', 'padre'),
			'categorias' => array(self::HAS_MANY, 'Categorias', 'padre'),
			'app' => array(self::BELONGS_TO, 'Apps', 'app_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'app_id' => null,
			'padre' => null,
			'nombre' => Yii::t('app', 'Nombre'),
			'descripcion' => Yii::t('app', 'Descripcion'),
			'articuloses' => null,
			'father' => 'Padre',
			'categoriases' => null,
			'app' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('app_id', $this->app_id);
		$criteria->compare('padre', $this->padre);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('descripcion', $this->descripcion, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}