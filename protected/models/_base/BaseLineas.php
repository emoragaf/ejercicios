<?php

/**
 * This is the model base class for the table "lineas".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Lineas".
 *
 * Columns in table "lineas" available as properties of the model,
 * followed by relations of table "lineas" available as properties of the model.
 *
 * @property integer $id
 * @property integer $articulos_id
 * @property string $texto
 * @property string $latex
 * @property string $imagen
 *
 * @property AdjuntosLineas[] $adjuntosLineases
 * @property EstilosLineas[] $estilosLineases
 * @property Articulos $articulos
 */
abstract class BaseLineas extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'lineas';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Linea|Lineas', $n);
	}

	public static function representingColumn() {
		return 'texto';
	}

	public function rules() {
		return array(
			array('articulos_id', 'required'),
			array('articulos_id', 'numerical', 'integerOnly'=>true),
			array('latex, imagen', 'length', 'max'=>255),
			array('texto', 'safe'),
			array('texto, latex, imagen', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, articulos_id, texto, latex, imagen', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'adjuntos' => array(self::HAS_MANY, 'AdjuntosLineas', 'id_linea'),
			'estilos' => array(self::HAS_MANY, 'EstilosLineas', 'lineas_id_linea'),
			'articulo' => array(self::BELONGS_TO, 'Articulos', 'articulos_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'articulos_id' => null,
			'texto' => Yii::t('app', 'Texto'),
			'latex' => Yii::t('app', 'Latex'),
			'imagen' => Yii::t('app', 'Imagen'),
			'adjuntosLineases' => null,
			'estilosLineases' => null,
			'articulos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('articulos_id', $this->articulos_id);
		$criteria->compare('texto', $this->texto, true);
		$criteria->compare('latex', $this->latex, true);
		$criteria->compare('imagen', $this->imagen, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}