<?php

/**
 * This is the model base class for the table "articulos".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Articulos".
 *
 * Columns in table "articulos" available as properties of the model,
 * followed by relations of table "articulos" available as properties of the model.
 *
 * @property integer $id
 * @property integer $categoria_id
 * @property string $nombre
 * @property string $descripcion
 *
 * @property Categorias $categoria
 * @property Lineas[] $lineases
 */
abstract class BaseArticulos extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'articulos';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Articulo|Articulos', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('categoria_id, nombre', 'required'),
			array('categoria_id', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>100),
			array('descripcion', 'safe'),
			array('descripcion', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, categoria_id, nombre, descripcion', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'categoria' => array(self::BELONGS_TO, 'Categorias', 'categoria_id'),
			'lineases' => array(self::HAS_MANY, 'Lineas', 'articulos_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'categoria_id' => null,
			'nombre' => Yii::t('app', 'Nombre'),
			'descripcion' => Yii::t('app', 'Descripcion'),
			'categoria' => null,
			'lineases' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('categoria_id', $this->categoria_id);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('descripcion', $this->descripcion, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}